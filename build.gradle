plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.0.3"
    id("io.micronaut.test-resources") version "4.0.3"
    id("io.micronaut.aot") version "4.0.3"
    id("au.com.dius.pact") version "4.4.2"

}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

dependencies {
    compileOnly("org.projectlombok:lombok:1.18.24")
    testImplementation 'org.projectlombok:lombok:1.18.28'
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")
    testCompileOnly("org.projectlombok:lombok:1.18.24")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.24")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut:micronaut-validation:3.9.3")
    implementation("io.micronaut:micronaut-runtime:3.9.3")
    implementation("io.swagger.core.v3:swagger-annotations")
//    implementation("javax.validation:validation-api:2.0.1.Final")
    implementation("io.micronaut.validation:micronaut-validation")
    compileOnly("org.projectlombok:lombok")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.h2database:h2")
    runtimeOnly("org.yaml:snakeyaml")
    testImplementation("io.micronaut.test:micronaut-test-rest-assured")
    testImplementation("org.assertj:assertj-core")
    testImplementation("org.awaitility:awaitility:4.2.0")
    testImplementation("org.junit.jupiter:junit-jupiter-params")
    testImplementation("org.mockito:mockito-core")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.10.0")
    testImplementation("io.micronaut.test:micronaut-test-junit5:3.9.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.10.0")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.10.0")
    testImplementation("org.mockito:mockito-junit-jupiter:4.0.0")
    //pact
    testImplementation("au.com.dius.pact.consumer:junit5:4.6.2")
    testImplementation("au.com.dius.pact.consumer:java8:4.1.42")
    testImplementation ("org.apache.httpcomponents:fluent-hc:4.5.14")



}
pact{
    broker{
        pactBrokerUrl = 'http://localhost:9292/'
    }
    publish{
        pactDirectory = "$buildDir/pacts"
        pactBrokerUrl = 'http://localhost:9292/'
//        tags = 'pact'
        consumerVersion = 1.0
        pactBrokerUsername = 'user'
        pactBrokerPassword = 'password'
    }
}

task testContract(type: Test){
    description("Contract verification")
    group("verification")
    useJUnitPlatform{
        includeTags 'pact'
    }
    ignoreFailures = true
    systemProperty "pactbroker.host", "http://localhost:9292/"
    systemProperty "pactbroker.port", "80"
    systemProperty "pactbroker.consumerversionselectors.tags", 1.0
    systemProperty "pact.provider.version", 1.0
    systemProperty "pact.provider.tag", "movie_branch"
    systemProperty "pact.verifier.publishTesults", "movie_results"
}

test{
    useJUnitPlatform{
        excludeTags 'pact'
    }
    ignoreFailures = true
}


application {
    mainClass.set("com.example.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}


graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
    aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}



